{"version":3,"sources":["components/Cita.jsx","components/Form.jsx","App.js","index.js"],"names":["Cita","cita","deleteCita","className","pet","owner","dateDischarge","time","symptoms","onClick","id","Form","createCita","useState","setCita","error","setError","updateState","e","target","name","value","onSubmit","preventDefault","trim","uuidv4","type","placeholder","onChange","App","initialCitas","JSON","parse","localStorage","getItem","citas","setCitas","useEffect","setItem","stringify","newCitas","filter","title","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a079a4f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Cita = ({ cita, deleteCita }) => (\n  <div className=\"cita\">\n    <p>\n      Pet: <span>{cita.pet}</span>\n    </p>\n\n    <p>\n      Owner: <span>{cita.owner}</span>\n    </p>\n\n    <p>\n      dateDischarge: <span>{cita.dateDischarge}</span>\n    </p>\n\n    <p>\n      time: <span>{cita.time}</span>\n    </p>\n\n    <p>\n      symptoms: <span>{cita.symptoms}</span>\n    </p>\n\n    <button\n      className=\"button eliminar u-full-width\"\n      onClick={() => deleteCita(cita.id)}\n    >\n      Delete &times;\n    </button>\n  </div>\n);\n\nCita.propTypes = {\n  cita: PropTypes.object.isRequired,\n  deleteCita: PropTypes.func.isRequired,\n};\n\nexport default Cita;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nconst Form = ({ createCita }) => {\n  const [cita, setCita] = useState({\n    pet: \"\",\n    owner: \"\",\n    dateDischarge: \"\",\n    time: \"\",\n    symptoms: \"\",\n  });\n\n  //State Para Manerar Errores\n  const [error, setError] = useState(false);\n\n  //Funcion que se ejecutara al detectar cambios en los inputs\n  const updateState = (e) => {\n    setCita({\n      ...cita,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //Destructuring al State:\n  const { pet, owner, dateDischarge, time, symptoms } = cita;\n\n  //Cuando el usuario Haga submit al Form\n  const submitCita = (e) => {\n    e.preventDefault();\n    //Validar\n    if (\n      pet.trim() === \"\" ||\n      owner.trim() === \"\" ||\n      dateDischarge.trim() === \"\" ||\n      time.trim() === \"\" ||\n      symptoms.trim() === \"\"\n    ) {\n      setError(true);\n      return;\n    }\n    //Limpiar el mensaje de error una ves superada la validacion\n    setError(false);\n\n    //Asignar ID\n    cita.id = uuidv4();\n\n    //Crear la cita\n    createCita(cita);\n\n    //Reiniciar el Form\n    setCita({\n      pet: \"\",\n      owner: \"\",\n      dateDischarge: \"\",\n      time: \"\",\n      symptoms: \"\",\n    });\n  };\n\n  return (\n    <>\n      <h2>create an appointment </h2>\n\n      {error && <p className=\"alerta-error\">All fields are required</p>}\n\n      <form onSubmit={submitCita}>\n        <label>Pet Name</label>\n        <input\n          type=\"text\"\n          name=\"pet\"\n          className=\"u-full-width\"\n          placeholder=\"pet Name\"\n          onChange={updateState}\n          value={pet}\n        />\n\n        <label>owner's name</label>\n        <input\n          type=\"text\"\n          name=\"owner\"\n          placeholder=\"owner's name\"\n          className=\"u-full-width\"\n          onChange={updateState}\n          value={owner}\n        />\n\n        <label>discharge date</label>\n        <input\n          type=\"date\"\n          name=\"dateDischarge\"\n          className=\"u-full-width\"\n          onChange={updateState}\n          value={dateDischarge}\n        />\n\n        <label>time</label>\n        <input\n          type=\"time\"\n          name=\"time\"\n          className=\"u-full-width\"\n          onChange={updateState}\n          value={time}\n        />\n\n        <label>symptoms</label>\n        <textarea\n          name=\"symptoms\"\n          className=\"u-full-width\"\n          onChange={updateState}\n          value={symptoms}\n        ></textarea>\n\n        <button type=\"submit\" className=\"u-full-width button-primary\">\n          add appointment\n        </button>\n      </form>\n    </>\n  );\n};\n\nForm.propTypes = {\n  createCita: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport Cita from \"./components/Cita\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  //Citas en Localstorage\n  let initialCitas = JSON.parse(localStorage.getItem(\"citas\"));\n\n  if (!initialCitas) {\n    initialCitas = [];\n  }\n\n  //State para todas las citas\n  const [citas, setCitas] = useState(initialCitas);\n\n  //useEffect para realizar funciones solo cuando cambie el state\n  useEffect(() => {\n    if (initialCitas) {\n      localStorage.setItem(\"citas\", JSON.stringify(citas));\n    } else {\n      localStorage.setItem(\"citas\", JSON.stringify([]));\n    }\n  }, [citas, initialCitas]);\n\n  //Funcion para guardar las citas actuales mas la nueva cita\n  const createCita = (cita) => {\n    setCitas([...citas, cita]);\n  };\n\n  //Funcion que elimina una Cita por su ID:\n  const deleteCita = (id) => {\n    const newCitas = citas.filter((cita) => cita.id !== id);\n    setCitas(newCitas);\n  };\n\n  //Mensaje Condicional\n  const title =\n    citas.length === 0 ? \"no appointments added\" : \"Manage your appointments\";\n\n  return (\n    <>\n      <h1>Patient Administration</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Form createCita={createCita} />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{title}</h2>\n\n            {citas.map((cita) => (\n              <Cita key={cita.id} cita={cita} deleteCita={deleteCita} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}